# 对象（object）
#  Python是一门面向对象的语言
# 程序运行当中，所有的数据都是存储到内在当中然后再运行
# 对象就是内在中专门用来存储指定数据的一场区域
# 对象实际上就是一个容器，专门用来存储数据
# Python中的数值，字符串，布尔值，None都是对象

# 对象的结构
# 每个对象中都要保存有三种数据
#  id（标识）
#     > id用来标识对象的唯一性，每一个对象都有唯一的id
#     > 对象的id就相当于人的身份证号一样
#     > 可以通过id()函数来查看对象的id
#     > id是由解析器生成的，在CPython中，id就是对象的内在地址
#  type（类型）
#     > 类型用来标识当前对象所属的类型
#     > 比如: int str float bool ...
#     > 类型决定了对象有哪些功能
#     > python是一门强类型的语言，对象一旦创建类型便不能修改
#  value（值）
#     > 值就是对象中存储的具体的数据
#     > 对于有些对象值是可以改变的
#     > 对象分成两大类，可变对象和不可变对象
#       可变对象的值可以改变
#       不可变对象的值不能改变，

##  面向对象（oop）
#   - Python是一门面向对象的编程语言
#   - 所谓的面向对象的语言，简单理解就是语言中的所有操作都是通过
#       对象来进行的
#   - 面向过程的编程的语言
#     - 面向过程指将我们的程序的逻辑分解为一个一个的步骤。


# 类(class)
#   - int()、float()、bool()、str()、list()、dict()...这些都是类
#   - a = int(10) # 创建一个int类的实例，等价于 a = 10
#   - 自定义的类都需要使用大写字母开头，使用大驼峰命名法（帕斯卡命名法）
#   来对类命名

a = int(10) #创建一个int类的实例
b = str('hello') # 创建一个str类的实例
print(a, type(a))
print(b,type(b))

# 定义一个简单的类
# 使用class关键字来定义类，语法和函数很像
# class 类名([父类]):
#   代码块

class MyClass(object):
    pass

print(MyClass) # <class '__main__.MyClass'> 表示一个类，运行在主文件中的Myclass类

# 使用Myclass创建一个对象
# 使用类来创建对象，就像调用一个函数一样
mc = MyClass() # mc就是通过MyClass创建的对象，mc是MyClass的实例
# <__main__.MyClass object at 0x10178f150> <class '__main__.MyClass'>
print(mc,type(mc)) 