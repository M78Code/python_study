Python是一种解释型，动态语言，具有明确而高效的语法
开发Python的解释器分类:
  CPython(官方):用C语言编写的Python解释器
  PyPy:用Python语言编写的Python解释器
  IronPython:用.NET编写的Python解释器
  Jython:用Java编写的Python解释器

退出Python命令行 quit()

Python解释器

IPython解释器功能更强大
在IPython里面，所有的模数命令以%开头
%whos（此模数命令，是查看当前变量在IPyton中有什么）
%pwd（查看当前目录）
%lsmagic（查看IPython中有哪些模数命令）
在IPython中执行系统命令，而不用退出IPython解释器
如 ls（旧版要这样操作 !ls）
IPython解释器中查询某一个东西的用法
eg: sum?

Jupyter解释器
先进入指定的目录，然后再通过命令行执行jupyter-notebook打开
a插入在行上面，b插入在行下面，dd删除行
选中输入框，按m键，进入记笔记模式，然后按Shift+Enter

Python环境配置
安装与使用
Windows建议Anaconda个人版
Linux/MacOS
Anaconda个人版/自行配置环境

Anaconda的替代: Miniconda
Anaconda的更新
命令行
 conda update condo
 conda install anaconda
 conda update anaconda
 conda list（查看Python安装了哪些包）
 anaconda自带pip，pip list（也可查看安装了哪些包）

 安装新包时，可以通过conda或pip来安装
 优先使用conda来安装包 conda install xxx(包名)
 如果使用conda找不到该包时，再用pip install xxx(包名)

Anaconda自带
 Numpy（数组为基础的工具包）
 SciPy（科学计算的工具包，比如线性代数，积分，求最大值和最小值）
 Pandas（处理一些结构化的数据，比如Excel表格，CSV数据）
 IPython（解释器）
 Jupyter Notebook（解释器）
 Scikit-Learn（SK论，包括很多机器学习的算法，聚类，分类，特征选择）

机器学习基础工具
科学计算:
 NumPy、SciPy、Matplotlib（Python用来可视化的包，得到数据或结果时可以用这个进行画图）、Pandas
 以上四个包Python机器学习基础必须掌握
机器学习:
 Scikit-Learn、Scikit-Image（处理图像数据的基本工具）、OpenCV（计算机视觉领域的一些常用工具，Python提供了一套调用OpenCV的接口）、Gensim（处理文本数据的继续学习库）、NLTK（传统的做NLP的库）
深度学习:
 Tensorflow、Pytorch、Keras（在Tensorflow上构建的库，把TensorFlow底层的很多东西抽象到算法层面）、
 Theano（最时使用的深度学习库，现在不使用，不维护）




Python不断地从其他优秀的数学软件引入高效的数据开发包
数据处理:pandas
数据计算:NumPy
数据可视化:matplotlib







